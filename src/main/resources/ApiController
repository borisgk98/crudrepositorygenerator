package com.mera.borisgk98.$model$showroom.server.rest.api;

import com.mera.borisgk98.$model$showroom.server.models.$model$;
import com.mera.borisgk98.$model$showroom.server.services.$model$Service;
import org.springframework.beans.factory.annotation.$model$wired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-05-18T17:15:41.019+03:00[Europe/Moscow]")

@Controller
@RequestMapping("\${openapi.$model$showroom.base-path:}")
public class $model$ApiController implements $model$Api {

    private final NativeWebRequest request;
    @$model$wired
    protected $model$Service $model$Service;

    @org.springframework.beans.factory.annotation.$model$wired
    public $model$ApiController(NativeWebRequest request) {
        this.request = request;
    }

    @Override
    public ResponseEntity<$model$> $model$$model$IdGet(Integer $model$Id) {
        Optional<$model$> $model$ = $model$Service.read($model$Id);
        return $model$.isPresent() ? ResponseEntity.ok($model$.get()) : new ResponseEntity<$model$>(HttpStatus.NOT_FOUND);
    }

    @Override
    public ResponseEntity<$model$> $model$Post(@Valid $model$ $model$) {
        return ResponseEntity.ok($model$Service.create($model$));
    }

    @Override
    public Optional<NativeWebRequest> getRequest() {
        return Optional.ofNullable(request);
    }

}
